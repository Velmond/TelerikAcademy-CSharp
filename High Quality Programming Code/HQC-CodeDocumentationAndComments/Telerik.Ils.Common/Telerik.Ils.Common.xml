<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>Telerik.Ils.Common</name>
  </assembly>
  <members>
    <member name="N:Telerik.Ils.Common">
    </member>
    <member name="T:Telerik.Ils.Common.StringExtensions">
      <summary>
Provides a set of methods for string manipulation</summary>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToMd5Hash(System.String)">
      <summary>
Converts a string's bytes to hashed data and turns them into a hexadecimal representation of its characters</summary>
      <returns>
The hexadecimal representation of the input's characters</returns>
      <param name="input">
The string that will be converted</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToBoolean(System.String)">
      <summary>
Converts a string into a boolean value</summary>
      <returns>
A boolean value representing the strings meaning</returns>
      <param name="input">
The string that will be converted (ex. "true", "false", "yes", "no", "1", "0", "да", "не")</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToShort(System.String)">
      <summary>
Converts a string into a numeric value of type 'short'</summary>
      <returns>
A numeric value representing the strings meaning</returns>
      <param name="input">
The string that will be converted</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToInteger(System.String)">
      <summary>
Converts a string into an integer numeric value</summary>
      <returns>
A numeric value representing the strings meaning</returns>
      <param name="input">
The string that will be converted</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToLong(System.String)">
      <summary>
Converts a string into a numeric value of type 'long'</summary>
      <returns>
A numeric value representing the strings meaning</returns>
      <param name="input">
The string that will be converted</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToDateTime(System.String)">
      <summary>
Converts a string into a DateTime value</summary>
      <returns>
A DateTime value representing the strings meaning</returns>
      <param name="input">
The string that will be converted</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.CapitalizeFirstLetter(System.String)">
      <summary>
Capitalizes the first letter of a string</summary>
      <returns>
The inputted string with its first character capitalized</returns>
      <param name="input">
The string that will be processed</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.GetStringBetween(System.String,System.String,System.String,System.Int32)">
      <summary>
Processes a string and gives back a substring between specified starting and ending substrings</summary>
      <returns>
A string between the values of startString and endString</returns>
      <param name="input">
The string that will be processed</param>
      <param name="startString">
The substring after which the substring should be gotten</param>
      <param name="endString">
The substring before which the substring should be gotten</param>
      <param name="startFrom">
The index in the inputted string from which the method should start</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ConvertCyrillicToLatinLetters(System.String)">
      <summary>
Converts a string written in cyrillic to latin letters</summary>
      <returns>
A string representation of the inputted string in latin letters</returns>
      <param name="input">
The string in cyrillic to be processed</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ConvertLatinToCyrillicKeyboard(System.String)">
      <summary>
Converts a string written in latin to cyrillic letters</summary>
      <returns>
A string representation of the inputted string in cyrillic letters</returns>
      <param name="input">
The string in latin to be processed</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToValidUsername(System.String)">
      <summary>
Converts a username to a valid string by converting it's letters to latin if there are cyrillic ones</summary>
      <returns>
A valid username</returns>
      <param name="input">
Username to be processed</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToValidLatinFileName(System.String)">
      <summary>
Converts a filename to a valid string by converting it's letters to latin if there are cyrillic ones</summary>
      <returns>
A valid filename</returns>
      <param name="input">
Filename to be processed</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.GetFirstCharacters(System.String,System.Int32)">
      <summary>
Gets the first characters of a string</summary>
      <returns>
A substring of the first characters of a string</returns>
      <param name="input">
String from which the characters should be gotten</param>
      <param name="charsCount">
Number of characters to get</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.GetFileExtension(System.String)">
      <summary>
Gets the file extension of a file if such exists</summary>
      <returns>
The files extension</returns>
      <param name="fileName">
File whose extension is needed</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToContentType(System.String)">
      <summary>
Gets a files content type by its extension</summary>
      <returns>
The content type for the file extension entered</returns>
      <param name="fileExtension">
The extension for which the content type is needed</param>
    </member>
    <member name="M:Telerik.Ils.Common.StringExtensions.ToByteArray(System.String)">
      <summary>
Converts a string to an array of its characters byte values</summary>
      <returns>
An array of the byte values of the characters</returns>
      <param name="input">
String to be converted</param>
    </member>
  </members>
</doc>
